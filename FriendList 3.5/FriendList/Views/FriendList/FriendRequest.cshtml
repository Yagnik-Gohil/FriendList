@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Extensions
@model IEnumerable<DataAccessLayer.Entities.UserTable>
@{
    ViewData["Title"] = "Friend Requests";
}
@{

    var userId = Context.Session.GetString("userId");
}
<div class="text-center">
    <h2 class="display-4">Friend Requests</h2>
</div>

@*<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.FirstName @item.LastName</td>
                <td>
                    <a href="@Url.Action("AcceptRequest","FriendList", new { uid = item.UID, ReturnUrl = Context.Request.GetEncodedUrl() })" class="btn btn-success" style="color: white;">Accept</a>
                    <a href="@Url.Action("CancelRequest","FriendList", new { uid = item.UID, ReturnUrl = Context.Request.GetEncodedUrl(), status = "reject" })" class="btn btn-danger" style="color: white;">Reject</a>
                </td>
            </tr>
        }
    </tbody>
</table>*@

@using Kendo.Mvc.UI
@(Html.Kendo().Grid<DataAccessLayer.Entities.UserTable>()
        .Name("grid")
        .Columns(columns =>
        {
            columns.Bound(c => c.FirstName).ClientTemplate("#=FirstName# #=LastName#").Title("Name");
            columns.Bound(c => c.UID).ClientTemplate("#=selectButton(data)#").Title("Action");

        })
        .DataSource(dataSource => dataSource
            .Ajax()
            .Model(model => model.Id(s => s.UID))
            .Read(read => read.Action("FriendRequestRead", "FriendList"))
        )
)

<script>
    function selectButton(data) {
        
        var template = kendo.format("<a class=\"k-button\" href='" + '@Url.Action("AcceptRequest", "FriendList", new { uid = "_uid_", ReturnUrl = Context.Request.GetEncodedUrl() }).Replace("_uid_","{0}" )' + " '>Accept</a> ", data.UID) + kendo.format("<a class=\"k-button\" href='" + '@Url.Action("CancelRequest", "FriendList", new { uid = "_uid_", ReturnUrl = Context.Request.GetEncodedUrl(), status = "reject" }).Replace("_uid_", "{0}")' + " '>Reject</a> ", data.UID)
        return template;
        
    }

</script>